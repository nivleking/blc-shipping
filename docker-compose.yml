services:
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - tunnel
      - blc-network

  backend:
    build:
      context: ./blc-shipping-backend
      dockerfile: Dockerfile
    container_name: blc-backend
    ports:
      - "8000:8000"
    volumes:
      - ./blc-shipping-backend:/var/www
      - /var/www/vendor
    env_file:
      - .env
      - ./blc-shipping-backend/.env
    depends_on:
      - mysql
    networks:
      - blc-network
      - tunnel
    restart: unless-stopped

  frontend:
    build:
      context: ./blc-shipping-frontend
      dockerfile: Dockerfile
    container_name: blc-frontend
    ports:
      - "5174:5174"
    volumes:
      - ./blc-shipping-frontend:/app/frontend
      - /app/frontend/node_modules
    env_file:
      - .env
      - ./blc-shipping-frontend/.env
    environment:
      VITE_API_URL: "${VITE_API_URL}"
      VITE_WEBSOCKET_URL: "${VITE_WEBSOCKET_URL}"
      VITE_SERVER_PORT: "${VITE_SERVER_PORT}"
      VITE_SERVER_TARGET: "${VITE_SERVER_TARGET}"
    networks:
      - blc-network
      - tunnel
    restart: unless-stopped

  websockets:
    build:
      context: ./blc-shipping-websocket
      dockerfile: Dockerfile
    container_name: blc-websockets
    ports:
      - "6001:6001"
    volumes:
      - ./blc-shipping-websocket:/app/websockets
      - /app/websockets/node_modules
    env_file:
      - .env
      - ./blc-shipping-websocket/.env
    environment:
      WEBSOCKET_ORIGIN: "${WEBSOCKET_ORIGIN}"
      WEBSOCKET_PORT: "${WEBSOCKET_PORT}"
    networks:
      - blc-network
      - tunnel
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: blc-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "blc_shipping"
      MYSQL_USER: "blc_user"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./blc-shipping-backend/database/backups:/var/backups/mysql
    networks:
      - blc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "blc_user", "--password=${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-backup:
    image: alpine:latest
    container_name: blc-db-backup
    restart: unless-stopped
    volumes:
      - ./blc-shipping-backend/database/backups:/backups
      - ./mysql/backup.sh:/backup.sh
      - ./mysql/cron-setup.sh:/cron-setup.sh
    environment:
      - MYSQL_USER=blc_user
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=blc_shipping
    depends_on:
      - mysql
    networks:
      - blc-network
    command: sh -c "apk add --no-cache mysql-client bash && /cron-setup.sh"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: blc-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: "${DB_PORT}"
      # PMA_USER: "${DB_USERNAME}"
      # PMA_PASSWORD: "${DB_PASSWORD}"
      UPLOAD_LIMIT: 300M
    depends_on:
      - mysql
    networks:
      - blc-network
      - tunnel
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer.blc.works
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9443:9443"
    networks:
      - blc-network
      - tunnel

networks:
  tunnel:
    name: tunnel
    driver: bridge
  blc-network:
    name: blc-network
    driver: bridge

volumes:
  mysql_data:
    name: blc_mysql_data
    external: true
  portainer_data:
    name: blc_portainer_data
