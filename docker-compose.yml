version: "3.8"
services:
  backend:
    build:
      context: ./blc-shipping-backend
      dockerfile: Dockerfile
    container_name: blc-backend
    ports:
      - "8000:8000"
    volumes:
      - ./blc-shipping-backend:/var/www
      - /var/www/vendor
    env_file:
      - .env
      - ./blc-shipping-backend/.env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blc-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend-blc-shipping
      dockerfile: Dockerfile
    container_name: blc-frontend  
    ports:
      - "5174:5174"
    volumes:
      - ./frontend-blc-shipping:/app/frontend
      - /app/frontend/node_modules
    env_file:
      - .env
      - ./frontend-blc-shipping/.env
    environment:
      VITE_API_URL: "${VITE_API_URL}"
      VITE_WEBSOCKET_URL: "${VITE_WEBSOCKET_URL}"
      VITE_SERVER_PORT: "${VITE_SERVER_PORT}"
      VITE_SERVER_TARGET: "${VITE_SERVER_TARGET}"
    networks:
      - blc-network
    restart: unless-stopped

  websockets:
    build:
      context: ./websockets-blc-shipping
      dockerfile: Dockerfile
    container_name: blc-websockets
    ports:
      - "6001:6001"
    volumes:
      - ./websockets-blc-shipping:/app/websockets
      - /app/websockets/node_modules
    env_file:
      - .env
      - ./websockets-blc-shipping/.env
    environment:
      WEBSOCKET_ORIGIN: "${WEBSOCKET_ORIGIN}"
      WEBSOCKET_PORT: "${WEBSOCKET_PORT}"
    networks:
      - blc-network
    restart: unless-stopped

  mysql:
    image: mysql:8
    container_name: blc-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
    ports:
      - "${DB_PORT}:3306" 
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - blc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: blc-phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: "${DB_PORT}"
      PMA_USER: "${DB_USERNAME}"
      PMA_PASSWORD: "${DB_PASSWORD}"
      UPLOAD_LIMIT: 300M
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blc-network
    restart: unless-stopped

networks:
  blc-network:
    name: blc-network
    driver: bridge

volumes:
  mysql_data:
    name: blc_mysql_data